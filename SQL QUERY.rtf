{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fswiss\fcharset0 ArialMT;\f2\fmodern\fcharset0 CourierNewPSMT;
\f3\fmodern\fcharset0 CourierNewPS-ItalicMT;\f4\fnil\fcharset0 HelveticaNeue-Medium;}
{\colortbl;\red255\green255\blue255;\red0\green45\blue153;\red237\green237\blue237;\red14\green0\blue45;
\red38\green38\blue38;\red0\green60\blue82;\red132\green221\blue253;\red213\green213\blue213;\red46\green111\blue253;
\red207\green187\blue254;\red29\green48\blue13;\red103\green29\blue0;\red52\green52\blue52;\red230\green87\blue141;
\red221\green32\blue103;\red49\green49\blue49;\red67\green67\blue67;\red63\green105\blue30;\red121\green183\blue11;
\red67\green10\blue31;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
The following SQL statement selects all the records in the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf2 \expnd0\expndtw0\kerning0
SELECT * FROM Customers;\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf2 \expnd0\expndtw0\kerning0
Some of The Most Important SQL Commands\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls1\ilvl0
\f0\b\fs30 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
SELECT
\b0 \expnd0\expndtw0\kerning0
 - extracts data from a database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
UPDATE
\b0 \expnd0\expndtw0\kerning0
 - updates data in a database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
DELETE
\b0 \expnd0\expndtw0\kerning0
 - deletes data from a database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
INSERT INTO
\b0 \expnd0\expndtw0\kerning0
 - inserts new data into a database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
CREATE DATABASE
\b0 \expnd0\expndtw0\kerning0
 - creates a new database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
ALTER DATABASE
\b0 \expnd0\expndtw0\kerning0
 - modifies a database\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
CREATE TABLE
\b0 \expnd0\expndtw0\kerning0
 - creates a new table\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
ALTER TABLE
\b0 \expnd0\expndtw0\kerning0
 - modifies a table\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
DROP TABLE
\b0 \expnd0\expndtw0\kerning0
 - deletes a table\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
CREATE INDEX
\b0 \expnd0\expndtw0\kerning0
 - creates an index (search key)\
\ls1\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
DROP INDEX
\b0 \expnd0\expndtw0\kerning0
 - deletes an index\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls1\ilvl0\cf4 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf6 \expnd0\expndtw0\kerning0
SELECT Column Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf6 \expnd0\expndtw0\kerning0
The following SQL statement selects the "CustomerName" and "City" columns from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf6 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf6 \expnd0\expndtw0\kerning0
SELECT CustomerName,City FROM Customers;\
\cf0 \
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf6 \expnd0\expndtw0\kerning0
SELECT DISTINCT Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf6 \expnd0\expndtw0\kerning0
The following SQL statement selects only the distinct values from the "City" columns from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf6 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf6 \expnd0\expndtw0\kerning0
SELECT DISTINCT City FROM Customers;\cf0 \
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf7 \expnd0\expndtw0\kerning0
SQL WHERE Clause\
\pard\pardeftab720\sl457

\f0\fs32 \cf7 \expnd0\expndtw0\kerning0
The WHERE clause is used to filter records.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf7 \expnd0\expndtw0\kerning0
WHERE Clause Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf7 \expnd0\expndtw0\kerning0
The following SQL statement selects all the customers from the country "Mexico", in the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf7 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf7 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE Country='Mexico';\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf7 \expnd0\expndtw0\kerning0
Text Fields vs. Numeric Fields\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf7 \expnd0\expndtw0\kerning0
SQL requires single quotes around text values (most database systems will also allow double quotes).\
However, numeric fields should not be enclosed in quotes:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf7 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf7 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE CustomerID=1;\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf7 \expnd0\expndtw0\kerning0
Operators in The WHERE Clause\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf7 \expnd0\expndtw0\kerning0
The following operators can be used in the WHERE clause:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b \cf7 \expnd0\expndtw0\kerning0
Operator\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Description\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b0 \cf7 \expnd0\expndtw0\kerning0
=\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Equal\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
<>\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Not equal. 
\b \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 In some versions of SQL this operator may be written as !=\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
>\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Greater than\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
<\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Less than\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
>=\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Greater than or equal\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
<=\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Less than or equal\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
BETWEEN\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Between an inclusive range\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
LIKE\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
Search for a pattern\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4080\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth11580\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
IN\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf7 \expnd0\expndtw0\kerning0
To specify multiple possible values for a column\cell \lastrow\row
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf9 \expnd0\expndtw0\kerning0
SQL AND & OR Operators\
\pard\pardeftab720\sl660\sa200

\fs60 \cf9 \expnd0\expndtw0\kerning0
AND Operator Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf9 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers from the country "Germany" AND the city "Berlin", in the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf9 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf9 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE Country='Germany'\
AND City='Berlin';\
\pard\pardeftab720\sl345

\f0 \cf9 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
\cf9 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf9 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf9 \expnd0\expndtw0\kerning0
OR Operator Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf9 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers from the city "Berlin" OR "M\'fcnchen", in the "Customers" table:\'a0\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf9 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf9 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City='Berlin'\
OR City='M\'fcnchen';\
\pard\pardeftab720\sl457
\cf9 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf9 \expnd0\expndtw0\kerning0
Combining AND & OR\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf9 \expnd0\expndtw0\kerning0
You can also combine AND and OR (use parenthesis to form complex expressions).\
The following SQL statement selects all customers from the country "Germany" AND the city must be equal to "Berlin" OR "M\'fcnchen", in the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf9 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf9 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE Country='Germany'\
AND (City='Berlin' OR City='M\'fcnchen');\
\pard\pardeftab720\sl345
\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf10 \expnd0\expndtw0\kerning0
SQL ORDER BY Keyword\
\pard\pardeftab720\sl457

\f0\fs32 \cf10 \expnd0\expndtw0\kerning0
The ORDER BY keyword is used to sort the result-set.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf10 \expnd0\expndtw0\kerning0
ORDER BY Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf10 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers from the "Customers" table, sorted by the "Country" column:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf10 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf10 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
ORDER BY Country;\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf10 \expnd0\expndtw0\kerning0
ORDER BY DESC Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf10 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers from the "Customers" table, sorted DESCENDING by the "Country" column:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf10 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf10 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
ORDER BY Country DESC;\
\pard\pardeftab720\sl345

\f0 \cf10 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf10 \expnd0\expndtw0\kerning0
ORDER BY Several Columns Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf10 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers from the "Customers" table, sorted by the "Country" and the "CustomerName" column:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf10 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf10 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
ORDER BY Country, CustomerName;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf11 \expnd0\expndtw0\kerning0
SQL INSERT INTO Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf11 \expnd0\expndtw0\kerning0
The INSERT INTO statement is used to insert new records in a table.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf11 \expnd0\expndtw0\kerning0
INSERT INTO Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf11 \expnd0\expndtw0\kerning0
Assume we wish to insert a new row in the "Customers" table.\
We can use the following SQL statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf11 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf11 \expnd0\expndtw0\kerning0
INSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)\
VALUES ('Cardinal','Tom B. Erichsen','Skagen 21','Stavanger','4006','Norway');\
\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf11 \expnd0\expndtw0\kerning0
Insert Data Only in Specified Columns\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf11 \expnd0\expndtw0\kerning0
It is also possible to only insert data in specific columns.\
The following SQL statement will insert a new row, but only insert data in the "CustomerName", "City", and "Country" columns (and the CustomerID field will of course also be updated automatically):\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf11 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf11 \expnd0\expndtw0\kerning0
INSERT INTO Customers (CustomerName, City, Country)\
VALUES ('Cardinal', 'Stavanger', 'Norway');\cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf12 \expnd0\expndtw0\kerning0
SQL UPDATE Statement\
\pard\pardeftab720\sl428

\f0\fs30 \cf12 \expnd0\expndtw0\kerning0
The UPDATE statement is used to update existing records in a table.
\f1\fs72 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\fs60 \cf12 \expnd0\expndtw0\kerning0
SQL UPDATE Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf12 \expnd0\expndtw0\kerning0
Assume we wish to update the customer "Alfreds Futterkiste" with a new contact person and city.\
We use the following SQL statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf12 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf12 \expnd0\expndtw0\kerning0
UPDATE Customers\
SET ContactName='Alfred Schmidt', City='Hamburg'\
WHERE CustomerName='Alfreds Futterkiste';\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf12 \expnd0\expndtw0\kerning0
Update Warning!\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf12 \expnd0\expndtw0\kerning0
Be careful when updating records. If we had omitted the WHERE clause, in the example above, like this:\
\pard\pardeftab720\sl428

\f2\fs28 \cf12 \cb3 \expnd0\expndtw0\kerning0
UPDATE Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SET ContactName='Alfred Schmidt', City='Hamburg';\cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428
\cf13 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf14 \expnd0\expndtw0\kerning0
SQL DELETE Statement\
\pard\pardeftab720\sl428

\f0\fs30 \cf14 \expnd0\expndtw0\kerning0
The DELETE statement is used to delete rows in a table.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf14 \expnd0\expndtw0\kerning0
SQL DELETE Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf14 \expnd0\expndtw0\kerning0
Assume we wish to delete the customer "Alfreds Futterkiste" from the "Customers" table.\
We use the following SQL statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf14 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf14 \expnd0\expndtw0\kerning0
DELETE FROM Customers\
WHERE CustomerName='Alfreds Futterkiste' AND ContactName='Maria Anders';\
\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf14 \expnd0\expndtw0\kerning0
Delete All Data\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf14 \expnd0\expndtw0\kerning0
It is possible to delete all rows in a table without deleting the table. This means that the table structure, attributes, and indexes will be intact:\
\pard\pardeftab720\sl428

\f2\fs28 \cf14 \cb3 \expnd0\expndtw0\kerning0
DELETE FROM 
\f3\i \expnd0\expndtw0\kerning0
table_name
\f2\i0 \expnd0\expndtw0\kerning0
;\cb1 \expnd0\expndtw0\kerning0
\
\
\cb3 \expnd0\expndtw0\kerning0
or\cb1 \expnd0\expndtw0\kerning0
\
\
\cb3 \expnd0\expndtw0\kerning0
DELETE * FROM 
\f3\i \expnd0\expndtw0\kerning0
table_name
\f2\i0 \expnd0\expndtw0\kerning0
;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf14 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 Be very careful when deleting records. You cannot undo this statement!\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf15 \expnd0\expndtw0\kerning0
SQL Injection\
\pard\pardeftab720\sl457

\f0\fs32 \cf15 \expnd0\expndtw0\kerning0
An SQL Injection can destroy your database.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf15 \expnd0\expndtw0\kerning0
SQL in Web Pages\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf15 \expnd0\expndtw0\kerning0
In the previous chapters, you have learned to retrieve (and update) database data, using SQL.\
When SQL is used to display data on a web page, it is common to let web users input their own search values.\
Since SQL statements are text only, it is easy, with a little piece of computer code, to dynamically change SQL statements to provide the user with selected data:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf15 \cb3 \expnd0\expndtw0\kerning0
Server Code\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf15 \expnd0\expndtw0\kerning0
txtUserId = getRequestString("UserId");\
txtSQL = "SELECT * FROM Users WHERE UserId = " + txtUserId;\cf0 \expnd0\expndtw0\kerning0
\
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf15 \expnd0\expndtw0\kerning0
SQL SELECT TOP Clause\
\pard\pardeftab720\sl660\sa200

\fs60 \cf15 \expnd0\expndtw0\kerning0
The SQL SELECT TOP Clause\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf15 \expnd0\expndtw0\kerning0
The SELECT TOP clause is used to specify the number of records to return.\
The SELECT TOP clause can be very useful on large tables with thousands of records. Returning a large number of records can impact on performance.\
\pard\pardeftab720\sl428\sa200

\b \cf15 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 Not all database systems support the SELECT TOP clause.\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf15 \expnd0\expndtw0\kerning0
Example\
\pard\pardeftab720\sl428

\f2\fs28 \cf15 \cb3 \expnd0\expndtw0\kerning0
SELECT *\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LIMIT 5;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf15 \expnd0\expndtw0\kerning0
SQL SELECT TOP Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf15 \expnd0\expndtw0\kerning0
The following SQL statement selects the two first records from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf15 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf15 \expnd0\expndtw0\kerning0
SELECT TOP 2 * FROM Customers;\
\pard\pardeftab720\sl345

\f0 \cf15 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf15 \expnd0\expndtw0\kerning0
SQL SELECT TOP PERCENT Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf15 \expnd0\expndtw0\kerning0
The following SQL statement selects the first 50% of the records from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf15 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf15 \expnd0\expndtw0\kerning0
SELECT TOP 50 PERCENT * FROM Customers;\cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL LIKE Operator\
\pard\pardeftab720\sl457

\f0\fs32 \cf16 \expnd0\expndtw0\kerning0
The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL LIKE Operator Examples\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with the letter "s":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE 's%';\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
\cf0 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\b \cf5 \cb1 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 The "%" sign is used to define wildcards (missing letters)\'a0both before and after the pattern. You will learn more about wildcards in the next chapter.\
The following SQL statement selects all customers with a City ending with the letter "s":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '%s';\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
\cf0 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a Country containing the pattern "land":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE Country LIKE '%land%';\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
\cf0 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
Using the NOT keyword allows you to select records that do NOT match the pattern.\
The following SQL statement selects all customers with Country NOT containing the pattern "land":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE Country NOT LIKE '%land%';\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf18 \expnd0\expndtw0\kerning0
SQL Wildcards\
\pard\pardeftab720\sl457

\f0\fs32 \cf18 \expnd0\expndtw0\kerning0
A wildcard character can be used to substitute for any other character(s) in a string.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
SQL Wildcard Characters\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
In SQL, wildcard characters are used with the SQL LIKE operator.\
SQL wildcards are used to search for data within a table.\'a0\
With SQL, the wildcards are:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth3060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth12600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b \cf18 \expnd0\expndtw0\kerning0
Wildcard\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
Description\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth3060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth12600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b0 \cf18 \expnd0\expndtw0\kerning0
%\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
A substitute for zero or more characters\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth3060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth12600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
_\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
A substitute for a single character\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth3060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth12600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
[
\i \expnd0\expndtw0\kerning0
charlist
\i0 \expnd0\expndtw0\kerning0
]\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
Sets and ranges of characters to match\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth3060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth12600\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
[^
\i \expnd0\expndtw0\kerning0
charlist
\i0 \expnd0\expndtw0\kerning0
]\
or\
[!
\i \expnd0\expndtw0\kerning0
charlist
\i0 \expnd0\expndtw0\kerning0
]\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf18 \expnd0\expndtw0\kerning0
Matches only a character NOT specified within the brackets\cell \lastrow\row
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
Using the SQL % Wildcard\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with "ber":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE 'ber%';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_percent"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf18 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City containing the pattern "es":\'a0\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '%es%';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_percent_pattern"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf18 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
Using the SQL _ Wildcard\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with any character, followed by "erlin":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '_erlin';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_underscore"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf18 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with "L", followed by any character, followed by "n", followed by any character, followed by "on":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE 'L_n_on';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_underscore2"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf18 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
Using the SQL [charlist] Wildcard\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with "b", "s", or "p":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '[bsp]%';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_charlist&ss=-1"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf18 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City starting with "a", "b", or "c":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '[a-c]%';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_wildcard_charlist2&ss=-1"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf18 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City NOT starting with "b", "s", or "p":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City LIKE '[!bsp]%';\
\
or\
\
SELECT * FROM Customers\
WHERE City NOT LIKE '[bsp]%';\
\pard\pardeftab720\sl457
\cf18 \expnd0\expndtw0\kerning0
\
\cf0 \
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL IN Operator\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The IN operator allows you to specify multiple values in a WHERE clause.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
IN Operator Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers with a City of "Paris" or "London":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Customers\
WHERE City IN ('Paris','London');\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf20 \expnd0\expndtw0\kerning0
SQL BETWEEN Operator\
\pard\pardeftab720\sl660\sa200

\fs60 \cf20 \expnd0\expndtw0\kerning0
The SQL BETWEEN Operator\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf20 \expnd0\expndtw0\kerning0
The BETWEEN operator selects values within a range. The values can be numbers, text, or dates.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf20 \expnd0\expndtw0\kerning0
BETWEEN Operator Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf20 \expnd0\expndtw0\kerning0
The following SQL statement selects all products with a price BETWEEN 10 and 20:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf20 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf20 \expnd0\expndtw0\kerning0
SELECT * FROM Products\
WHERE Price BETWEEN 10 AND 20;\
\pard\pardeftab720\sl345

\f0 \cf20 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_between"}}{\fldrslt 
\b\fs26 \cf20 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf20 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
NOT BETWEEN Operator Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
To display the products outside the range of the previous example, use NOT BETWEEN:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Products\
WHERE Price NOT BETWEEN 10 AND 20;\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_not_between"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf18 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
BETWEEN Operator with IN Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
The following SQL statement selects all products with a price BETWEEN 10 and 20, but products with a CategoryID of 1,2, or 3 should not be displayed:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Products\
WHERE (Price BETWEEN 10 AND 20)\
AND NOT CategoryID IN (1,2,3);\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_between_in"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf18 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf18 \expnd0\expndtw0\kerning0
BETWEEN Operator with Text Value Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf18 \expnd0\expndtw0\kerning0
The following SQL statement selects all products with a ProductName beginning with any of the letter BETWEEN 'C' and 'M':\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf18 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf18 \expnd0\expndtw0\kerning0
SELECT * FROM Products\
WHERE ProductName BETWEEN 'C' AND 'M';\
\pard\pardeftab720\sl345

\f0 \cf18 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_between_text"}}{\fldrslt 
\b\fs26 \cf18 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf18 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
NOT BETWEEN Operator with Text Value Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all products with a ProductName beginning with any of the letter NOT BETWEEN 'C' and 'M':\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Products\
WHERE ProductName NOT BETWEEN 'C' AND 'M';\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
BETWEEN Operator with Date Value Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all orders with an OrderDate BETWEEN '04-July-1996' and '09-July-1996':\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT * FROM Orders\
WHERE OrderDate BETWEEN #07/04/1996# AND #07/09/1996#;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Aliases\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Aliases\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL aliases are used to give a database table, or a column in a table, a temporary name.\
Basically aliases are created to make column names more readable.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
Alias Example for Table Columns\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement specifies two aliases, one for the CustomerName column and one for the ContactName column. 
\b \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 It requires double quotation marks or square brackets if the column name contains spaces:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT CustomerName AS Customer, ContactName AS [Contact Person]\
FROM Customers;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_alias_column"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
In the following SQL statement we combine four columns (Address, City, PostalCode, and Country) and create an alias named "Address":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT CustomerName, Address+', '+City+', '+PostalCode+', '+Country AS Address\
FROM Customers;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_alias_column2&ss=-1"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\b \cf5 \cb1 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 To get the SQL statement above to work in MySQL use the following:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT CustomerName, CONCAT(Address,', ',City,', ',PostalCode,', ',Country) AS Address\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
Alias Example for Tables\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all the orders from the customer with CustomerID=4 (Around the Horn). We use the "Customers" and "Orders" tables, and give them the table aliases of "c" and "o" respectively (Here we have used aliases to make the SQL shorter):\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT o.OrderID, o.OrderDate, c.CustomerName\
FROM Customers AS c, Orders AS o\
WHERE c.CustomerName="Around the Horn" AND c.CustomerID=o.CustomerID;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_alias_table"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
The same SQL statement without aliases:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerName\
FROM Customers, Orders\
WHERE Customers.CustomerName="Around the Horn" AND Customers.CustomerID=Orders.CustomerID;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_alias_no"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
Aliases can be useful when:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls2\ilvl0\cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
There are more than one table involved in a query\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Functions are used in the query\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Column names are big or not very readable\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Two or more columns are combined together\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Joins\
\pard\pardeftab720\sa200

\f0\fs32 \cf16 \expnd0\expndtw0\kerning0
SQL joins are used to combine rows from two or more tables.\
\pard\tx720\pardeftab720\sl428

\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL JOIN\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
An SQL JOIN clause is used to combine rows from two or more tables, based on a common field between them.\
The most common type of join is: 
\b \expnd0\expndtw0\kerning0
SQL INNER JOIN (simple join)
\b0 \expnd0\expndtw0\kerning0
. An SQL INNER JOIN return all rows from multiple tables where the join condition is met.\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \expnd0\expndtw0\kerning0
Example\
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate\
FROM Orders\
INNER JOIN Customers\
ON Orders.CustomerID=Customers.CustomerID;\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
Different SQL JOINs\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Before we continue with examples, we will list the types the different SQL JOINs you can use:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls3\ilvl0
\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
INNER JOIN
\b0 \expnd0\expndtw0\kerning0
: Returns all rows when there is at least one match in BOTH tables\
\ls3\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
LEFT JOIN
\b0 \expnd0\expndtw0\kerning0
: Return all rows from the left table, and the matched rows from the right table\
\ls3\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
RIGHT JOIN
\b0 \expnd0\expndtw0\kerning0
: Return all rows from the right table, and the matched rows from the left table\
\ls3\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
FULL JOIN
\b0 \expnd0\expndtw0\kerning0
: Return all rows when there is a match in ONE of the tables\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls3\ilvl0\cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL INNER JOIN Keyword\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The INNER JOIN keyword selects all rows from both tables as long as there is a match between the columns in both tables.\
\pard\pardeftab720\sl345

\f2 \cf0 \expnd0\expndtw0\kerning0
SELECT Customers.CustomerName, Orders.OrderID\
FROM Customers\
INNER JOIN Orders\
ON Customers.CustomerID=Orders.CustomerID\
ORDER BY Customers.CustomerName;
\f0 \cf5 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL LEFT JOIN Keyword\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The LEFT JOIN keyword returns all rows from the left table (table1), with the matching rows in the right table (table2). The result is NULL in the right side when there is no match.\
\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Customers.CustomerName, Orders.OrderID\
FROM Customers\
LEFT JOIN Orders\
ON Customers.CustomerID=Orders.CustomerID\
ORDER BY Customers.CustomerName;\
\pard\pardeftab720\sl345

\f0 \cf0 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\b \cf5 \cb1 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 The LEFT JOIN keyword returns all the rows from the left table (Customers), even if there are no matches in the right table (Orders).\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL RIGHT JOIN Keyword\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The RIGHT JOIN keyword returns all rows from the right table (table2), with the matching rows in the left table (table1). The result is NULL in the left side when there is no match.\
\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \expnd0\expndtw0\kerning0
Example\
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Orders.OrderID, Employees.FirstName\
FROM Orders\
RIGHT JOIN Employees\
ON Orders.EmployeeID=Employees.EmployeeID\
ORDER BY Orders.OrderID;\
\pard\pardeftab720\sl428

\f0 \cf5 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL FULL OUTER JOIN Keyword\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The FULL OUTER JOIN keyword returns all rows from the left table (table1) and from the right table (table2).\
The FULL OUTER JOIN keyword combines the result of both LEFT and RIGHT joins.\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL FULL OUTER JOIN Example\
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all customers, and all orders:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT Customers.CustomerName, Orders.OrderID\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FULL OUTER JOIN Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ON Customers.CustomerID=Orders.CustomerID\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ORDER BY Customers.CustomerName;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL UNION Operator\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The UNION operator is used to combine the result-set of two or more SELECT statements.\
Notice that each SELECT statement within the UNION must have the same number of columns. The columns must also have similar data types. Also, the columns in each SELECT statement must be in the same order.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL UNION Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects all the 
\b \expnd0\expndtw0\kerning0
different
\b0 \expnd0\expndtw0\kerning0
 cities (only distinct values) from the "Customers" and the "Suppliers" tables:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT City FROM Customers\
UNION\
SELECT City FROM Suppliers\
ORDER BY City;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_union"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\b \cf5 \cb1 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 UNION cannot be used to list ALL cities from the two tables. If several customers and suppliers share the same city, each city will only be listed once. UNION selects only distinct values. Use UNION ALL to also select duplicate values!\
\pard\pardeftab720\sl428\sa400
\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL UNION ALL Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement uses UNION ALL to select 
\b \expnd0\expndtw0\kerning0
all
\b0 \expnd0\expndtw0\kerning0
 (duplicate values also) cities from the "Customers" and "Suppliers" tables:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT City FROM Customers\
UNION ALL\
SELECT City FROM Suppliers\
ORDER BY City;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_union_all"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf5 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL UNION ALL With WHERE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement uses UNION ALL to select 
\b \expnd0\expndtw0\kerning0
all
\b0 \expnd0\expndtw0\kerning0
 (duplicate values also) 
\b \expnd0\expndtw0\kerning0
German
\b0 \expnd0\expndtw0\kerning0
 cities from the "Customers" and "Suppliers" tables:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT City, Country FROM Customers\
WHERE Country='Germany'\
UNION ALL\
SELECT City, Country FROM Suppliers\
WHERE Country='Germany'\
ORDER BY City;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL SELECT INTO Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The SELECT INTO statement selects data from one table and inserts it into a new table.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL SELECT INTO Examples\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Create a backup copy of Customers:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT *\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO CustomersBackup2013\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Use the IN clause to copy the table into another database:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT *\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO CustomersBackup2013 IN 'Backup.mdb'\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Copy only a few columns into the new table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT CustomerName, ContactName\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO CustomersBackup2013\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Copy only the German customers into the new table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT *\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO CustomersBackup2013\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE Country='Germany';\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Copy data from more than one table into the new table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT Customers.CustomerName, Orders.OrderID\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO CustomersOrderBackup2013\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LEFT JOIN Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ON Customers.CustomerID=Orders.CustomerID;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 The SELECT INTO statement can also be used to create a new, empty table using the schema of another. Just add a WHERE clause that causes the query to return no data:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT *\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
INTO 
\f3\i \expnd0\expndtw0\kerning0
newtable
\f2\i0 \cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM 
\f3\i \expnd0\expndtw0\kerning0
table1
\f2\i0 \cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE 1=0;\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL INSERT INTO SELECT Statement\
\pard\pardeftab720\sa200

\f0\fs32 \cf16 \expnd0\expndtw0\kerning0
With SQL, you can copy information from one table into another.\
The INSERT INTO SELECT statement copies data from one table and inserts it into an existing table.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
The SQL INSERT INTO SELECT Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The INSERT INTO SELECT statement selects data from one table and inserts it into an existing table. Any existing rows in the target table are unaffected.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL INSERT INTO SELECT Examples\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Copy only a few columns from "Suppliers" into "Customers":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
INSERT INTO Customers (CustomerName, Country)\
SELECT SupplierName, Country FROM Suppliers;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_insert_into_select"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
Copy only the German suppliers into "Customers":\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
INSERT INTO Customers (CustomerName, Country)\
SELECT SupplierName, Country FROM Suppliers\
WHERE Country='Germany';\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE DATABASE Statement\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE DATABASE Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement creates a database called "my_db":\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE DATABASE my_db;\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE TABLE Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The CREATE TABLE statement is used to create a table in a database.\
Tables are organized into rows and columns; and each table must have a name.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE TABLE Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Now we want to create a table called "Persons" that contains five columns: PersonID, LastName, FirstName, Address, and City.\
We use the following CREATE TABLE statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\
(\
PersonID int,\
LastName varchar(255),\
FirstName varchar(255),\
Address varchar(255),\
City varchar(255)\
);\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_create_table"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
The PersonID column is of type int and will hold an integer.\
The LastName, FirstName, Address, and City columns are of type varchar and will hold characters, and the maximum length for these fields is 255 characters.\
The empty "Persons" table will now look like this:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth3400\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx1728
\clvertalt \clcbpat1 \clwWidth3520\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx3456
\clvertalt \clcbpat1 \clwWidth3620\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx5184
\clvertalt \clcbpat1 \clwWidth3000\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx6912
\clvertalt \clcbpat1 \clwWidth1820\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340

\b\fs24 \cf0 \expnd0\expndtw0\kerning0
PersonID\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
LastName\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
FirstName\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
Address\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
City\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth3400\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx1728
\clvertalt \clcbpat3 \clwWidth3520\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx3456
\clvertalt \clcbpat3 \clwWidth3620\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx5184
\clvertalt \clcbpat3 \clwWidth3000\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx6912
\clvertalt \clcbpat3 \clwWidth1820\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340

\b0 \cf0 \expnd0\expndtw0\kerning0
\'a0\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
\'a0\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
\'a0\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
\'a0\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
\'a0\cell \lastrow\row
\pard\pardeftab720\sl428

\b\fs30 \cf5 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 The empty table can be filled with data with the INSERT INTO statement.\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Constraints\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL constraints are used to specify rules for the data in a table.\
\'a0If there is any violation between the constraint and the data action, the action is aborted by the constraint.\
Constraints can be specified when the table is created (inside the CREATE TABLE statement) or after the table is created (inside the ALTER TABLE statement).\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE TABLE + CONSTRAINT Syntax\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE 
\f3\i \expnd0\expndtw0\kerning0
table_name
\f2\i0 \cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f3\i \cf13 \cb3 \expnd0\expndtw0\kerning0
column_name1 data_type
\f2\i0 \expnd0\expndtw0\kerning0
(
\f3\i \expnd0\expndtw0\kerning0
size
\f2\i0 \expnd0\expndtw0\kerning0
) 
\f3\i \expnd0\expndtw0\kerning0
constraint_name
\f2\i0 \expnd0\expndtw0\kerning0
,\cb1 \expnd0\expndtw0\kerning0
\

\f3\i \cb3 \expnd0\expndtw0\kerning0
column_name2 data_type
\f2\i0 \expnd0\expndtw0\kerning0
(
\f3\i \expnd0\expndtw0\kerning0
size
\f2\i0 \expnd0\expndtw0\kerning0
) 
\f3\i \expnd0\expndtw0\kerning0
constraint_name
\f2\i0 \expnd0\expndtw0\kerning0
,\cb1 \expnd0\expndtw0\kerning0
\

\f3\i \cb3 \expnd0\expndtw0\kerning0
column_name3 data_type
\f2\i0 \expnd0\expndtw0\kerning0
(
\f3\i \expnd0\expndtw0\kerning0
size
\f2\i0 \expnd0\expndtw0\kerning0
) 
\f3\i \expnd0\expndtw0\kerning0
constraint_name
\f2\i0 \expnd0\expndtw0\kerning0
,\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428
\cf13 \cb3 \expnd0\expndtw0\kerning0
....\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
);\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\'a0In SQL, we have the following constraints:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls4\ilvl0
\b \cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
NOT NULL
\b0 \expnd0\expndtw0\kerning0
 - Indicates that a column cannot store NULL value\
\ls4\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
UNIQUE
\b0 \expnd0\expndtw0\kerning0
 - Ensures that each row for a column must have a unique value\
\ls4\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
PRIMARY KEY
\b0 \expnd0\expndtw0\kerning0
 - A combination of a NOT NULL and UNIQUE. Ensures that a column (or combination of two or more columns) have an unique identity which helps to find a particular record in a table more easily and quickly\
\ls4\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
FOREIGN KEY
\b0 \expnd0\expndtw0\kerning0
 - Ensure the referential integrity of the data in one table to match values in another table\
\ls4\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
CHECK
\b0 \expnd0\expndtw0\kerning0
 - Ensures that the value in a column meets a specific condition\
\ls4\ilvl0
\b \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
DEFAULT
\b0 \expnd0\expndtw0\kerning0
 - Specifies a default value when specified none for this column\
\pard\pardeftab720\sl428\sa200
\cf5 \expnd0\expndtw0\kerning0
The next chapters will describe each constraint in detail.\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL NOT NULL Constraint\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL NOT NULL Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The NOT NULL constraint enforces a column to NOT accept NULL values.\
The NOT NULL constraint enforces a field to always contain a value. This means that you cannot insert a new record, or update a record without adding a value to this field.\
The following SQL enforces the "P_Id" column and the "LastName" column to not accept NULL values:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
CREATE TABLE PersonsNotNull\
(\
P_Id int NOT NULL,\
LastName varchar(255) NOT NULL,\
FirstName varchar(255),\
Address varchar(255),\
City varchar(255)\
)\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL UNIQUE Constraint\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL UNIQUE Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The UNIQUE constraint uniquely identifies each record in a database table.\
The UNIQUE and PRIMARY KEY constraints both provide a guarantee for uniqueness for a column or set of columns.\
A PRIMARY KEY constraint automatically has a UNIQUE constraint defined on it.\
Note that you can have many UNIQUE constraints per table, but only one PRIMARY KEY constraint per table.\
\pard\pardeftab720\sl400

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\
(\
P_Id int NOT NULL,\
LastName varchar(255) NOT NULL,\
FirstName varchar(255),\
Address varchar(255),\
City varchar(255),\
UNIQUE (P_Id)\
)\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \cb1 \expnd0\expndtw0\kerning0
SQL UNIQUE Constraint on ALTER TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To create a UNIQUE constraint on the "P_Id" column when the table is already created, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL / SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ADD UNIQUE (P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl400
\cf13 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \cb1 \expnd0\expndtw0\kerning0
To DROP a UNIQUE Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To drop a UNIQUE constraint, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP INDEX uc_PersonID\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \cb1 \expnd0\expndtw0\kerning0
SQL PRIMARY KEY Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The PRIMARY KEY constraint uniquely identifies each record in a database table.\
Primary keys must contain UNIQUE values.\
A primary key column cannot contain NULL values.\
Most tables should have a primary key, and each table can have only ONE primary key.\
The following SQL creates a PRIMARY KEY on the "P_Id" column when the "Persons" table is created:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
P_Id int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LastName varchar(255) NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FirstName varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
Address varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
City varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
PRIMARY KEY (P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 In the example above there is only ONE PRIMARY KEY (pk_PersonID). However, the VALUE of the primary key is made up of TWO COLUMNS (P_Id + LastName).\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
To DROP a PRIMARY KEY Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To drop a PRIMARY KEY constraint, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP PRIMARY KEY\cb1 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL FOREIGN KEY Constraint\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
A FOREIGN KEY in one table points to a PRIMARY KEY in another table.\
\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL FOREIGN KEY Constraint on CREATE TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL creates a FOREIGN KEY on the "P_Id" column when the "Orders" table is created:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
O_Id int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
OrderNo int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
P_Id int,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
PRIMARY KEY (O_Id),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FOREIGN KEY (P_Id) REFERENCES Persons(P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL FOREIGN KEY Constraint on ALTER TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To create a FOREIGN KEY constraint on the "P_Id" column when the "Orders" table is already created, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL / SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ADD FOREIGN KEY (P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
REFERENCES Persons(P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL / SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ADD CONSTRAINT fk_PerOrders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FOREIGN KEY (P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
REFERENCES Persons(P_Id)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
To DROP a FOREIGN KEY Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To drop a FOREIGN KEY constraint, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP FOREIGN KEY fk_PerOrders\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP CONSTRAINT fk_PerOrders\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \cb1 \expnd0\expndtw0\kerning0
SQL CHECK Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The CHECK constraint is used to limit the value range that can be placed in a column.\
If you define a CHECK constraint on a single column it allows only certain values for this column.\
If you define a CHECK constraint on a table it can limit the values in certain columns based on values in other columns in the row.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL CHECK Constraint on CREATE TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL creates a CHECK constraint on the "P_Id" column when the "Persons" table is created. The CHECK constraint specifies that the column "P_Id" must only include integers greater than 0.\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
P_Id int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LastName varchar(255) NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FirstName varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
Address varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
City varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
CHECK (P_Id>0)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
To DROP a CHECK Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To drop a CHECK constraint, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP CONSTRAINT chk_Person\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP CHECK chk_Person\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL DEFAULT Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The DEFAULT constraint is used to insert a default value into a column.\
The default value will be added to all new records, if no other value is specified.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL DEFAULT Constraint on CREATE TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL creates a DEFAULT constraint on the "City" column when the "Persons" table is created:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
My SQL / SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
P_Id int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LastName varchar(255) NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FirstName varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
Address varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
City varchar(255) DEFAULT 'Sandnes'\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The DEFAULT constraint can also be used to insert system values, by using functions like GETDATE():\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Orders\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
O_Id int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
OrderNo int NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
P_Id int,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
OrderDate date DEFAULT GETDATE()\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL DEFAULT Constraint on ALTER TABLE\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To create a DEFAULT constraint on the "City" column when the table is already created, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ALTER City SET DEFAULT 'SANDNES'\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL Server / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ALTER COLUMN City SET DEFAULT 'SANDNES'\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
To DROP a DEFAULT Constraint\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
To drop a DEFAULT constraint, use the following SQL:\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
MySQL:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ALTER City DROP DEFAULT\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL Server / Oracle / MS Access:
\b0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ALTER COLUMN City DROP DEFAULT\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE INDEX Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
An index can be created in a table to find data more quickly and efficiently.\
The users cannot see the indexes, they are just used to speed up searches/queries.\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 Updating a table with indexes takes more time than updating a table without (because the indexes also need an update). So you should only create indexes on columns (and tables) that will be frequently searched against.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
CREATE INDEX Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The SQL statement below creates an index named "PIndex" on the "LastName" column in the "Persons" table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE INDEX PIndex\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ON Persons (LastName)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
If you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE INDEX PIndex\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ON Persons (LastName, FirstName)\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL DROP INDEX, DROP TABLE, and DROP DATABASE\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
The DROP INDEX Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The DROP INDEX statement is used to delete an index in a table.\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
DROP INDEX Syntax for MS Access:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP INDEX index_name ON table_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
DROP INDEX Syntax for MS SQL Server:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP INDEX table_name.index_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
DROP INDEX Syntax for DB2/Oracle:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP INDEX index_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
DROP INDEX Syntax for MySQL:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE table_name DROP INDEX index_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
The DROP TABLE Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The DROP TABLE statement is used to delete a table.\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP TABLE table_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
The DROP DATABASE Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The DROP DATABASE statement is used to delete a database.\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP DATABASE database_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
The TRUNCATE TABLE Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
What if we only want to delete the data inside the table, and not the table itself?\
Then, use the TRUNCATE TABLE statement:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
TRUNCATE TABLE table_name\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL ALTER TABLE Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The ALTER TABLE statement is used to add, delete, or modify columns in an existing table.\
\pard\pardeftab720\sl400

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\
ADD DateOfBirth date\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \cb1 \expnd0\expndtw0\kerning0
Change Data Type Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Now we want to change the data type of the column named "DateOfBirth" in the "Persons" table.\
We use the following SQL statement:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ALTER COLUMN DateOfBirth year\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Notice that the "DateOfBirth" column is now of type year and is going to hold a year in a two-digit or four-digit format.\
\pard\pardeftab720\sl428\sa400
\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
DROP COLUMN Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Next, we want to delete the column named "DateOfBirth" in the "Persons" table.\
We use the following SQL statement:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
ALTER TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
DROP COLUMN DateOfBirth\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL AUTO INCREMENT Field\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Very often we would like the value of the primary key field to be created automatically every time a new record is inserted.\
We would like to create an auto-increment field in a table.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
Syntax for SQL Server\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement defines the "ID" column to be an auto-increment primary key field in the "Persons" table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ID int IDENTITY(1,1) PRIMARY KEY,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LastName varchar(255) NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FirstName varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
Address varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
City varchar(255)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \cb1 \expnd0\expndtw0\kerning0
Syntax for Access\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement defines the "ID" column to be an auto-increment primary key field in the "Persons" table:\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
Syntax for SQL Server\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement defines the "ID" column to be an auto-increment primary key field in the "Persons" table:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE TABLE Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
(\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ID int IDENTITY(1,1) PRIMARY KEY,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
LastName varchar(255) NOT NULL,\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FirstName varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
Address varchar(255),\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
City varchar(255)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The MS SQL Server uses the IDENTITY keyword to perform an auto-increment feature.\
In the example above, the starting value for IDENTITY is 1, and it will increment by 1 for each new record.\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 To specify that the "ID" column should start at value 10 and increment by 5, change it to IDENTITY(10,5).\
To insert a new record into the "Persons" table, we will NOT have to specify a value for the "ID" column (a unique value will be added automatically):\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
INSERT INTO Persons (FirstName,LastName)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
VALUES ('Lars','Monsen')\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The SQL statement above would insert a new record into the "Persons" table. The "ID" column would be assigned a unique value. The "FirstName" column would be set to "Lars" and the "LastName" column would be set to "Monsen".\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The MS Access uses the AUTOINCREMENT keyword to perform an auto-increment feature.\
By default, the starting value for AUTOINCREMENT is 1, and it will increment by 1 for each new record.\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 To specify that the "ID" column should start at value 10 and increment by 5, change the autoincrement to AUTOINCREMENT(10,5).\
To insert a new record into the "Persons" table, we will NOT have to specify a value for the "ID" column (a unique value will be added automatically):\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
INSERT INTO Persons (FirstName,LastName)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
VALUES ('Lars','Monsen')\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The SQL statement above would insert a new record into the "Persons" table. The "P_Id" column would be assigned a unique value. The "FirstName" column would be set to "Lars" and the "LastName" column would be set to "Monsen".\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Views\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
In SQL, a view is a virtual table based on the result-set of an SQL statement.\
A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.\
You can add SQL functions, WHERE, and JOIN statements to a view and present the data as if the data were coming from one single table.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE VIEW Examples\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
If you have the Northwind database you can see that it has several views installed by default.\
The view "Current Product List" lists all active products (products that are not discontinued) from the "Products" table. The view is created with the following SQL:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE VIEW [Current Product List] AS\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SELECT ProductID,ProductName\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Products\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE Discontinued=No\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
We can query the view above as follows:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT * FROM [Current Product List]\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Another view in the Northwind sample database selects every product in the "Products" table with a unit price higher than the average unit price:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE VIEW [Products Above Average Price] AS\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SELECT ProductName,UnitPrice\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Products\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE UnitPrice>(SELECT AVG(UnitPrice) FROM Products)\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
We can query the view above as follows:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT * FROM [Products Above Average Price]\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Another view in the Northwind database calculates the total sale for each category in 1997. Note that this view selects its data from another view called "Product Sales for 1997":\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE VIEW [Category Sales For 1997] AS\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SELECT DISTINCT CategoryName,Sum(ProductSales) AS CategorySales\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM [Product Sales for 1997]\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
GROUP BY CategoryName\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
We can query the view above as follows:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT * FROM [Category Sales For 1997]\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
We can also add a condition to the query. Now we want to see the total sale only for the category "Beverages":\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT * FROM [Category Sales For 1997]\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE CategoryName='Beverages'\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Updating a View\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
You can update a view by using the following syntax:\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
SQL CREATE OR REPLACE VIEW Syntax\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE OR REPLACE VIEW view_name AS\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SELECT column_name(s)\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM table_name\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE condition\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Now we want to add the "Category" column to the "Current Product List" view. We will update the view with the following SQL:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
CREATE VIEW [Current Product List] AS\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
SELECT ProductID,ProductName,Category\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Products\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE Discontinued=No\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Dropping a View\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
You can delete a view with the DROP VIEW command.\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
SQL DROP VIEW Syntax\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
DROP VIEW view_name\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sa200

\f0\fs32 \cf16 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Date Functions\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
As long as your data contains only the date portion, your queries will work as expected. However, if a time portion is involved, it gets complicated.\
Before talking about the complications of querying for dates, we will look at the most important built-in functions for working with dates.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
MySQL Date Functions\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following table lists the most important built-in date functions in MySQL:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b \cf5 \expnd0\expndtw0\kerning0
Function\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Description\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_now.asp"}}{\fldrslt 
\b0 \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 NOW()}}
\b0 \expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the current date and time\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_curdate.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 CURDATE()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the current date\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_curtime.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 CURTIME()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the current time\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_date.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATE()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Extracts the date part of a date or date/time expression\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_extract.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 EXTRACT()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns a single part of a date/time\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_date_add.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATE_ADD()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Adds a specified time interval to a date\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_date_sub.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATE_SUB()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Subtracts a specified time interval from a date\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_datediff_mysql.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATEDIFF()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the number of days between two dates\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_date_format.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATE_FORMAT()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Displays date/time data in different formats\cell \lastrow\row
\pard\pardeftab720\sl428\sa400
\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Server Date Functions\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following table lists the most important built-in date functions in SQL Server:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420

\b \cf5 \expnd0\expndtw0\kerning0
Function\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Description\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_getdate.asp"}}{\fldrslt 
\b0 \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 GETDATE()}}
\b0 \expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the current date and time\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_datepart.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATEPART()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns a single part of a date/time\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_dateadd.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATEADD()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Adds or subtracts a specified time interval from a date\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_datediff.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 DATEDIFF()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Returns the time between two dates\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat1 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth4480\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth10880\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/func_convert.asp"}}{\fldrslt \cf5 \expnd0\expndtw0\kerning0
\ul \ulc5 CONVERT()}}\expnd0\expndtw0\kerning0
\cell 
\pard\intbl\itap1\pardeftab720\sl420
\cf5 \expnd0\expndtw0\kerning0
Displays date/time data in different formats\cell \lastrow\row
\pard\pardeftab720\sl400

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT * FROM Orders WHERE OrderDate='2008-11-11'
\f0\fs32 \cf16 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL NULL Values\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
If a column in a table is optional, we can insert a new record or update an existing record without adding a value to this column. This means that the field will be saved with a NULL value.\
NULL values are treated differently from other values.\
NULL is used as a placeholder for unknown or inapplicable values.\
\pard\pardeftab720\sl400

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT LastName,FirstName,Address FROM Persons\
WHERE Address IS NULL\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \cb1 \expnd0\expndtw0\kerning0
SQL IS NOT NULL\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
How do we select only the records with no NULL values in the "Address" column?\
We will have to use the IS NOT NULL operator:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT LastName,FirstName,Address FROM Persons\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
WHERE Address IS NOT NULL\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL NULL Functions\
\pard\pardeftab720\sl428\sa200

\f0\b\fs30 \cf5 \expnd0\expndtw0\kerning0
MySQL
\b0 \expnd0\expndtw0\kerning0
\
MySQL does have an ISNULL() function. However, it works a little bit different from Microsoft's ISNULL() function.\
In MySQL we can use the IFNULL() function, like this:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT ProductName,UnitPrice*(UnitsInStock+IFNULL(UnitsOnOrder,0))\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Products\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
or we can use the COALESCE() function, like this:\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT ProductName,UnitPrice*(UnitsInStock+COALESCE(UnitsOnOrder,0))\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
FROM Products\cb1 \expnd0\expndtw0\kerning0
\
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Functions\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/sql_datatypes.asp"}}{\fldrslt 
\f0\fs40 \cf19 \expnd0\expndtw0\kerning0
\'ab Previous}}
\f0\fs40 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\qr
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/sql_func_avg.asp"}}{\fldrslt \cf19 \expnd0\expndtw0\kerning0
Next Chapter \'bb}}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sa200

\fs32 \cf16 \expnd0\expndtw0\kerning0
SQL has many built-in functions for performing calculations on data.\
\pard\pardeftab720\sl428\sa400

\fs30 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Aggregate Functions\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL aggregate functions return a single value, calculated from values in a column.\
Useful aggregate functions:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls5\ilvl0\cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
AVG() - Returns the average value\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
COUNT() - Returns the number of rows\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
FIRST() - Returns the first value\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
LAST() - Returns the last value\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
MAX() - Returns the largest value\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
MIN() - Returns the smallest value\
\ls5\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
SUM() - Returns the sum\
\pard\pardeftab720\sl428\sa400
\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL Scalar functions\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
SQL scalar functions return a single value, based on the input value.\
Useful scalar functions:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl428
\ls6\ilvl0\cf5 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
UCASE() - Converts a field to upper case\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
LCASE() - Converts a field to lower case\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
MID() - Extract characters from a text field\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
LEN() - Returns the length of a text field\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
ROUND() - Rounds a numeric field to the number of decimals specified\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
NOW() - Returns the current system date and time\
\ls6\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
FORMAT() - Formats how a field is to be displayed\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
Tip:
\b0 \expnd0\expndtw0\kerning0
 The aggregate functions and the scalar functions will be explained in details in the next chapters.\
\pard\pardeftab720\sl480\sa200

\f4\fs44 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL AVG() Function\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL AVG() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement gets the average value of the "Price" column from the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT AVG(Price) AS PriceAverage FROM Products;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_avg"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
The following SQL statement selects the "ProductName" and "Price" records that have an above average price:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT ProductName, Price FROM Products\
WHERE Price>(SELECT AVG(Price) FROM Products);\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL COUNT() Function\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL COUNT(column_name) Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement counts the number of orders from "CustomerID"=7 from the "Orders" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT COUNT(CustomerID) AS OrdersFromCustomerID7 FROM Orders\
WHERE CustomerID=7;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf5 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL COUNT(*) Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement counts the total number of orders in the "Orders" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT COUNT(*) AS NumberOfOrders FROM Orders;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_func_count_all"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf5 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL COUNT(DISTINCT column_name) Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement counts the number of unique customers in the "Orders" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT COUNT(DISTINCT CustomerID) AS NumberOfCustomers FROM Orders;\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL FIRST() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The FIRST() function returns the first value of the selected column.
\f2 \cf0 \expnd0\expndtw0\kerning0
\

\fs28 \cf13 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
SQL Server Syntax\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT TOP 1 
\f3\i \expnd0\expndtw0\kerning0
column_name
\f2\i0 \expnd0\expndtw0\kerning0
 FROM 
\f3\i \expnd0\expndtw0\kerning0
table_name\cb1 \expnd0\expndtw0\kerning0
\

\f2\i0 \cb3 \expnd0\expndtw0\kerning0
ORDER BY
\f3\i \expnd0\expndtw0\kerning0
 column_name 
\f2\i0 \expnd0\expndtw0\kerning0
ASC;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
Example\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT TOP 1 CustomerName FROM Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ORDER BY CustomerID ASC;\cb1 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL LAST() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The LAST() function returns the last value of the selected column.\
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
SQL Server Syntax\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT TOP 1 
\f3\i \expnd0\expndtw0\kerning0
column_name
\f2\i0 \expnd0\expndtw0\kerning0
 FROM 
\f3\i \expnd0\expndtw0\kerning0
table_name\cb1 \expnd0\expndtw0\kerning0
\

\f2\i0 \cb3 \expnd0\expndtw0\kerning0
ORDER BY
\f3\i \expnd0\expndtw0\kerning0
 column_name 
\f2\i0 \expnd0\expndtw0\kerning0
DESC;\cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl520\sa200

\f1\fs48 \cf5 \expnd0\expndtw0\kerning0
Example\
\pard\pardeftab720\sl428

\f2\fs28 \cf13 \cb3 \expnd0\expndtw0\kerning0
SELECT TOP 1 CustomerName FROM Customers\cb1 \expnd0\expndtw0\kerning0
\
\cb3 \expnd0\expndtw0\kerning0
ORDER BY CustomerID DESC;\cb1 \expnd0\expndtw0\kerning0
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL MAX() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The MAX() function returns the largest value of the selected column.\
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL MAX() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement gets the largest value of the "Price" column from the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT MAX(Price) AS HighestPrice FROM Products;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL MIN() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The MIN() function returns the smallest value of the selected column.
\f1\fs72 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL MIN() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement gets the smallest value of the "Price" column from the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT MIN(Price) AS SmallestOrderPrice FROM Products;\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL SUM() Function\
\pard\pardeftab720\sl660\sa200

\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL SUM() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement finds the sum of all the "Quantity" fields for the "OrderDetails" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT SUM(Quantity) AS TotalItemsOrdered FROM OrderDetails;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL GROUP BY Statement\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The GROUP BY statement is used in conjunction with the aggregate functions to group the result-set by one or more columns.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL GROUP BY Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Now we want to find the number of orders sent by each shipper.\
The following SQL statement counts as orders grouped by shippers:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Shippers.ShipperName,COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders\
LEFT JOIN Shippers\
ON Orders.ShipperID=Shippers.ShipperID\
GROUP BY ShipperName;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_groupby"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400
\cf5 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
GROUP BY More Than One Column\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
We can also use the GROUP BY statement on more than one column, like this:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Shippers.ShipperName, Employees.LastName,\
COUNT(Orders.OrderID) AS NumberOfOrders\
FROM ((Orders\
INNER JOIN Shippers\
ON Orders.ShipperID=Shippers.ShipperID)\
INNER JOIN Employees\
ON Orders.EmployeeID=Employees.EmployeeID)\
GROUP BY ShipperName,LastName;\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL HAVING Clause\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The HAVING clause was added to SQL because the WHERE keyword could not be used with aggregate functions.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL HAVING Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
Now we want to find\'a0 if any of the employees has registered more than 10 orders.\
We use the following SQL statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders FROM (Orders\
INNER JOIN Employees\
ON Orders.EmployeeID=Employees.EmployeeID)\
GROUP BY LastName\
HAVING COUNT(Orders.OrderID) > 10;\
\pard\pardeftab720\sl345

\f0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl345
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_having"}}{\fldrslt 
\b\fs26 \cf1 \cb19 \expnd0\expndtw0\kerning0
Try it yourself \'bb}}\cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa200
\cf5 \cb1 \expnd0\expndtw0\kerning0
Now we want to find if the employees "Davolio" or "Fuller" have registered more than 25 orders.\
We add an ordinary WHERE clause to the SQL statement:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders\
INNER JOIN Employees\
ON Orders.EmployeeID=Employees.EmployeeID\
WHERE LastName='Davolio' OR LastName='Fuller'\
GROUP BY LastName\
HAVING COUNT(Orders.OrderID) > 25;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL UCASE() Function\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The UCASE() function converts the value of a field to uppercase.\
\pard\pardeftab720\sl345

\f2 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL UCASE() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the "CustomerName" and "City" columns from the "Customers" table, and converts the "CustomerName" column to uppercase:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT UCASE(CustomerName) AS Customer, City\
FROM Customers;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL LCASE() Function\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The LCASE() function converts the value of a field to lowercase.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL LCASE() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the "CustomerName" and "City" columns from the "Customers" table, and converts the "CustomerName" column to lowercase:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT LCASE(CustomerName) AS Customer, City\
FROM Customers;\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL MID() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The MID() function is used to extract characters from a text field.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL MID() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the first four characters from the "City" column from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT MID(City,1,4) AS ShortCity\
FROM Customers;\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL LEN() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The LEN() function returns the length of the value in a text field.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL LEN() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the "CustomerName" and the length of the values in the "Address" column from the "Customers" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT CustomerName,LEN(Address) as LengthOfAddress\
FROM Customers;\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL ROUND() Function\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The ROUND() function is used to round a numeric field to the number of decimals specified.\
\pard\pardeftab720\sl428\sa200

\b \cf5 \expnd0\expndtw0\kerning0
Note:
\b0 \expnd0\expndtw0\kerning0
 Many database systems do rounding differently than you might expect. When rounding a number with a fractional part to an integer, our school teachers told us to round .1 through .4 DOWN to the next lower integer, and .5 through .9 UP to the next higher integer. But if all the digits 1 through 9 are equally likely, this introduces a slight bias towards infinity, since we always round .5 up. Many database systems have adopted the IEEE 754 standard for arithmetic operations, according to which the default rounding behavior is "round half to even." In this scheme, .5 is rounded to the nearest even integer. So, both 11.5 and 12.5 would be rounded to 12.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL ROUND() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the product name and rounds the price in the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT ProductName, ROUND(Price,0) AS RoundedPrice\
FROM Products;\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL NOW() Function\
\pard\pardeftab720\sl428

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The NOW() function returns the current system date and time.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL NOW() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the product name, and price for today from the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT ProductName, Price, Now() AS PerDate\
FROM Products;\
\pard\pardeftab720\sl428
\cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL FORMAT() Function\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The FORMAT() function is used to format how a field is to be displayed.\
\pard\pardeftab720\sl660\sa200

\f1\fs60 \cf5 \expnd0\expndtw0\kerning0
SQL FORMAT() Example\
\pard\pardeftab720\sl428\sa200

\f0\fs30 \cf5 \expnd0\expndtw0\kerning0
The following SQL statement selects the product name, and price for today (formatted like YYYY-MM-DD) from the "Products" table:\
\pard\pardeftab720\sl440\sa200

\f1\fs40 \cf17 \cb3 \expnd0\expndtw0\kerning0
Example\cb1 \
\pard\pardeftab720\sl345

\f2\fs30 \cf0 \expnd0\expndtw0\kerning0
SELECT ProductName, Price, FORMAT(Now(),'YYYY-MM-DD') AS PerDate\
FROM Products;\
\
\
\
\pard\pardeftab720\sl780\sa200

\f1\fs72 \cf5 \expnd0\expndtw0\kerning0
SQL Quick Reference From W3Schools\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/sql_func_format.asp"}}{\fldrslt 
\f0\fs40 \cf19 \expnd0\expndtw0\kerning0
\'ab Previous}}
\f0\fs40 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\qr
{\field{\*\fldinst{HYPERLINK "http://www.w3schools.com/sql/sql_hosting.asp"}}{\fldrslt \cf19 \expnd0\expndtw0\kerning0
Next Chapter \'bb}}\expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl428\sa400

\fs30 \cf5 \expnd0\expndtw0\kerning0
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrt\brdrnil \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340

\b\fs24 \cf0 \expnd0\expndtw0\kerning0
SQL Statement\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
Syntax\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340

\b0 \cf0 \expnd0\expndtw0\kerning0
AND / OR\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
WHERE condition\
AND|OR condition\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
ALTER TABLE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
ALTER TABLE table_name \
ADD column_name datatype\
\pard\intbl\itap1\pardeftab720\sl340\sa200
\cf0 \expnd0\expndtw0\kerning0
or\
ALTER TABLE table_name \uc0\u8232 DROP COLUMN column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
AS (alias)\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name AS column_alias\
FROM table_name\
\pard\intbl\itap1\pardeftab720\sl340\sa200
\cf0 \expnd0\expndtw0\kerning0
or\
SELECT column_name\uc0\u8232 FROM table_name\'a0 AS table_alias\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
BETWEEN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
WHERE column_name\
BETWEEN value1 AND value2\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE DATABASE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE DATABASE database_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE TABLE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE TABLE table_name\
(\
column_name1 data_type,\
column_name2 data_type,\
column_name3 data_type,\
...\
)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE INDEX\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE INDEX index_name\
ON table_name (column_name)\
\pard\intbl\itap1\pardeftab720\sl340\sa200
\cf0 \expnd0\expndtw0\kerning0
or\
CREATE UNIQUE INDEX index_name\uc0\u8232 ON table_name (column_name)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE VIEW\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
CREATE VIEW view_name AS\
SELECT column_name(s)\
FROM table_name\
WHERE condition\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DELETE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DELETE FROM table_name\
WHERE some_column=some_value\
\pard\intbl\itap1\pardeftab720\sl340\sa200
\cf0 \expnd0\expndtw0\kerning0
or\
DELETE FROM table_name \uc0\u8232 (
\b \expnd0\expndtw0\kerning0
Note: 
\b0 \expnd0\expndtw0\kerning0
Deletes the entire table!!)\
DELETE * FROM table_name \uc0\u8232 (
\b \expnd0\expndtw0\kerning0
Note: 
\b0 \expnd0\expndtw0\kerning0
Deletes the entire table!!)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP DATABASE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP DATABASE database_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP INDEX\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP INDEX table_name.index_name (SQL Server)\
DROP INDEX index_name ON table_name (MS Access)\
DROP INDEX index_name (DB2/Oracle)\
ALTER TABLE table_name\
DROP INDEX index_name (MySQL)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP TABLE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
DROP TABLE table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
EXISTS\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
IF EXISTS (SELECT * FROM table_name WHERE id = ?)\
BEGIN\
--do what needs to be done if exists\
END\
ELSE\
BEGIN\
--do what needs to be done if not\
END\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
GROUP BY\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name, aggregate_function(column_name)\
FROM table_name\
WHERE column_name operator value\
GROUP BY column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
HAVING\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name, aggregate_function(column_name)\
FROM table_name\
WHERE column_name operator value\
GROUP BY column_name\
HAVING aggregate_function(column_name) operator value\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
IN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
WHERE column_name\
IN (value1,value2,..)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
INSERT INTO\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
INSERT INTO table_name\
VALUES (value1, value2, value3,....)\
\pard\intbl\itap1\pardeftab720\sl340\sa200

\i \cf0 \expnd0\expndtw0\kerning0
or
\i0 \expnd0\expndtw0\kerning0
\
INSERT INTO table_name\uc0\u8232 (column1, column2, column3,...)\u8232 VALUES (value1, value2, value3,....)\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
INNER JOIN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name1\
INNER JOIN table_name2 \
ON table_name1.column_name=table_name2.column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
LEFT JOIN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name1\
LEFT JOIN table_name2 \
ON table_name1.column_name=table_name2.column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
RIGHT JOIN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name1\
RIGHT JOIN table_name2 \
ON table_name1.column_name=table_name2.column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
FULL JOIN\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name1\
FULL JOIN table_name2 \
ON table_name1.column_name=table_name2.column_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
LIKE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
WHERE column_name LIKE pattern\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
ORDER BY\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
ORDER BY column_name [ASC|DESC]\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT *\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT *\
FROM table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT DISTINCT\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT DISTINCT column_name(s)\
FROM table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT INTO\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT *\
INTO new_table_name [IN externaldatabase]\
FROM old_table_name\
\pard\intbl\itap1\pardeftab720\sl340\sa200

\i \cf0 \expnd0\expndtw0\kerning0
or
\i0 \expnd0\expndtw0\kerning0
\
SELECT column_name(s)\uc0\u8232 INTO new_table_name [IN externaldatabase]\u8232 FROM old_table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT TOP\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT TOP number|percent column_name(s)\
FROM table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
TRUNCATE TABLE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
TRUNCATE TABLE table_name\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
UNION\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s) FROM table_name1\
UNION\
SELECT column_name(s) FROM table_name2\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
UNION ALL\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s) FROM table_name1\
UNION ALL\
SELECT column_name(s) FROM table_name2\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat1 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat1 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
UPDATE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
UPDATE table_name\
SET column1=value, column2=value,...\
WHERE some_column=some_value\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \tamarb240 \trbrdrl\brdrs\brdrw20\brdrcf8 \trbrdrb\brdrs\brdrw20\brdrcf8 \trbrdrr\brdrs\brdrw20\brdrcf8 
\clvertalt \clcbpat3 \clwWidth5500\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx4320
\clvertalt \clcbpat3 \clwWidth9860\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf8 \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt160 \clpadl160 \clpadb160 \clpadr160 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
WHERE\cell 
\pard\intbl\itap1\pardeftab720\sl340
\cf0 \expnd0\expndtw0\kerning0
SELECT column_name(s)\
FROM table_name\
WHERE column_name operator value\cell \lastrow\row
}